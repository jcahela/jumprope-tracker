import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import Header from '../components/Header';
import Timer from '../components/Timer';
import RoundCount from '@/components/RoundCount';
import React, { useState, useEffect } from 'react';

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const [ isRunning, setIsRunning ] = useState(false)
  const [ round, setRound ] = useState(0);
  const [ count, setCount ] = useState(0);
  const [ status, setStatus ] = useState('jump') // 'jump', 'rest'

  const beginTraining = (e: React.MouseEvent<HTMLButtonElement>) => {
    e.preventDefault();
    isRunning ? setIsRunning(false) : setIsRunning(true);
  }

  useEffect(() => {
    let interval;

    if (isRunning) {
      interval = setInterval(() => {
        setCount((prev) => {
          if (status === 'jump' && prev === 20) {
            setRound((prev) => prev + 1);
            setStatus('rest');
            return 0;
          }
          console.log(status, prev);
          if (status === 'rest' && prev === 10) {
            setStatus('jump');
            return 0;
          }
          return prev + 1;
        })
      }, 1000)
    }

    return () => {
      clearInterval(interval);
    }
  }, [isRunning]);

  return (
    <>
      <Head>
        <title>Jumprope Tracker</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <Header />
        <RoundCount completedRounds={ round } />
        <button className={ `${styles.patopleft2} ${styles.prettyButton}` } onClick={beginTraining}>{ isRunning ? 'Stop' : 'Start' }</button>
        <Timer type={ status === 'jump' ? 'Round' : 'Rest' } seconds={ count } round={ status === 'jump' ? round + 1 : undefined}/>
      </main>
    </>
  )
}
